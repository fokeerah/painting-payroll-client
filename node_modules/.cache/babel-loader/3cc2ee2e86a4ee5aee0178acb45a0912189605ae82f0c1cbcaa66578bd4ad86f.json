{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Downloads\\\\painting-payroll-client\\\\src\\\\pages\\\\EmployeeMaster.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { Button } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000/api/employees';\nexport default function EmployeeMaster() {\n  _s();\n  const [rows, setRows] = useState([]);\n  useEffect(() => {\n    fetch(API_URL).then(res => res.json()).then(setRows).catch(err => console.error('Fetch error:', err));\n  }, []);\n  const handleAdd = async () => {\n    const newEmployee = {\n      name: '',\n      position: '',\n      rate: 0,\n      phone: '',\n      nic: '',\n      address: '',\n      startDate: '',\n      status: 'Active'\n    };\n    const res = await fetch(API_URL, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newEmployee)\n    });\n    const data = await res.json();\n    setRows(prev => [...prev, data]);\n  };\n  const handleRowEdit = async updatedRow => {\n    const res = await fetch(`${API_URL}/${updatedRow._id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedRow)\n    });\n    const data = await res.json();\n    setRows(prev => prev.map(r => r._id === data._id ? data : r));\n  };\n  const handleDelete = async id => {\n    await fetch(`${API_URL}/${id}`, {\n      method: 'DELETE'\n    });\n    setRows(prev => prev.filter(r => r._id !== id));\n  };\n  const columns = [{\n    field: 'name',\n    headerName: 'Name',\n    width: 150,\n    editable: true\n  }, {\n    field: 'position',\n    headerName: 'Position',\n    width: 150,\n    editable: true\n  }, {\n    field: 'rate',\n    headerName: 'Rate',\n    width: 100,\n    editable: true\n  }, {\n    field: 'phone',\n    headerName: 'Phone',\n    width: 130,\n    editable: true\n  }, {\n    field: 'nic',\n    headerName: 'NIC',\n    width: 120,\n    editable: true\n  }, {\n    field: 'address',\n    headerName: 'Address',\n    width: 150,\n    editable: true\n  }, {\n    field: 'startDate',\n    headerName: 'Start Date',\n    width: 120,\n    editable: true\n  }, {\n    field: 'status',\n    headerName: 'Status',\n    width: 100,\n    editable: true\n  }, {\n    field: 'actions',\n    headerName: 'Actions',\n    renderCell: params => /*#__PURE__*/_jsxDEV(Button, {\n      color: \"error\",\n      onClick: () => handleDelete(params.id),\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this),\n    sortable: false,\n    width: 100\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: 600,\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleAdd,\n      variant: \"contained\",\n      color: \"primary\",\n      style: {\n        margin: '10px 0'\n      },\n      children: \"Add Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DataGrid, {\n      rows: rows,\n      columns: columns,\n      pageSize: 10,\n      getRowId: row => row._id,\n      onRowEditStop: params => handleRowEdit(params.row)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(EmployeeMaster, \"aEmP4ME4qF+uYWoxBpsZBPdGgb8=\");\n_c = EmployeeMaster;\nvar _c;\n$RefreshReg$(_c, \"EmployeeMaster\");","map":{"version":3,"names":["React","useEffect","useState","DataGrid","Button","jsxDEV","_jsxDEV","API_URL","EmployeeMaster","_s","rows","setRows","fetch","then","res","json","catch","err","console","error","handleAdd","newEmployee","name","position","rate","phone","nic","address","startDate","status","method","headers","body","JSON","stringify","data","prev","handleRowEdit","updatedRow","_id","map","r","handleDelete","id","filter","columns","field","headerName","width","editable","renderCell","params","color","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","sortable","style","height","variant","margin","pageSize","getRowId","row","onRowEditStop","_c","$RefreshReg$"],"sources":["C:/Users/User/Downloads/painting-payroll-client/src/pages/EmployeeMaster.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { Button } from '@mui/material';\n\nconst API_URL = 'http://localhost:5000/api/employees';\n\nexport default function EmployeeMaster() {\n  const [rows, setRows] = useState([]);\n\n  useEffect(() => {\n    fetch(API_URL)\n      .then(res => res.json())\n      .then(setRows)\n      .catch(err => console.error('Fetch error:', err));\n  }, []);\n\n  const handleAdd = async () => {\n    const newEmployee = {\n      name: '',\n      position: '',\n      rate: 0,\n      phone: '',\n      nic: '',\n      address: '',\n      startDate: '',\n      status: 'Active'\n    };\n    const res = await fetch(API_URL, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(newEmployee)\n    });\n    const data = await res.json();\n    setRows(prev => [...prev, data]);\n  };\n\n  const handleRowEdit = async (updatedRow) => {\n    const res = await fetch(`${API_URL}/${updatedRow._id}`, {\n      method: 'PUT',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(updatedRow)\n    });\n    const data = await res.json();\n    setRows(prev => prev.map(r => r._id === data._id ? data : r));\n  };\n  \n\n  const handleDelete = async (id) => {\n    await fetch(`${API_URL}/${id}`, { method: 'DELETE' });\n    setRows(prev => prev.filter(r => r._id !== id));\n  };\n  \n\n  const columns = [\n    { field: 'name', headerName: 'Name', width: 150, editable: true },\n    { field: 'position', headerName: 'Position', width: 150, editable: true },\n    { field: 'rate', headerName: 'Rate', width: 100, editable: true },\n    { field: 'phone', headerName: 'Phone', width: 130, editable: true },\n    { field: 'nic', headerName: 'NIC', width: 120, editable: true },\n    { field: 'address', headerName: 'Address', width: 150, editable: true },\n    { field: 'startDate', headerName: 'Start Date', width: 120, editable: true },\n    { field: 'status', headerName: 'Status', width: 100, editable: true },\n    {\n      field: 'actions',\n      headerName: 'Actions',\n      renderCell: (params) => (\n        <Button color=\"error\" onClick={() => handleDelete(params.id)}>Delete</Button>\n      ),\n      sortable: false,\n      width: 100\n    }\n  ];\n\n  return (\n    <div style={{ height: 600, width: '100%' }}>\n      <Button onClick={handleAdd} variant=\"contained\" color=\"primary\" style={{ margin: '10px 0' }}>\n        Add Employee\n      </Button>\n      <DataGrid\n        rows={rows}\n        columns={columns}\n        pageSize={10}\n        getRowId={(row) => row._id}\n        onRowEditStop={(params) => handleRowEdit(params.row)}\n      />\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}